Everything is done using indices instead of vertices.

Without threshold:
This should be a separate method. It'll be called by the "With threshold" method.
Initialize V3 Sum and int Count variables. Iterate through all vertices, add their positions to Sum, and increase Count by 1.
When done, divide Sum by Count.


With threshold:
This is going to be slow as balls.

First I'll set up groups of vertices. Each vertex must be contained by only one group. For this reason, 
as soon as a vertex is added to a group, it's also added to an array of matched vertices.
Iterate through all vertices using i. Continue only if i is not in the matched array.
Add i to the matched array. Initialize a group list and add i.
For each vertex, iterate through them again in a nested loop using j.
If j is within range of i AND not in the matched array, add j to the matched array and to the group list.
When done with the inner loop, call the method that averages their position.
Repeat until the outer loop reaches the end of the selected array.